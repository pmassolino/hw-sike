-- Compute o <- a+b

-- In case of size 1
reg_a = a0_X; reg_b = b0_X; reg_acc = 0; o0_X = reg_o; Enable sign a,b; operation : b +/- a + acc;
reg_a = 0; reg_b = 2prime0; reg_acc = reg_o; reg_s = reg_o_positive; o0_X = reg_o; Enable sign a,b; operation : -s*b + a + acc;
reg_a = 0; reg_b = 2prime0; reg_acc = reg_o; reg_s = reg_o_negative; o0_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = 0; reg_b = 2prime0; reg_acc = reg_o; reg_s = reg_o_negative; o0_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = 0; reg_b = 0; reg_acc = 0; operation : b +/- a + acc;
-- In case of size 2, 3, 4, 5, 6, 7, 8
reg_a = a0_X; reg_b = b0_X; reg_acc = 0; o0_X = reg_o; operation : b +/- a + acc;
-- In case of size 2
reg_a = a1_X; reg_b = b1_X; reg_acc = reg_o >> 256; o1_X = reg_o; Enable sign a, b; operation : b +/- a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_positive; operation : -s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; Enable sign a,b; operation : -s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = 0; reg_b = 0; reg_acc = 0; operation : b +/- a + acc;
-- In case of size 3, 4, 5, 6, 7, 8
reg_a = a1_X; reg_b = b1_X; reg_acc = reg_o >> 256; o1_X = reg_o; operation : b +/- a + acc;
-- In case of size 3
reg_a = a2_X; reg_b = b2_X; reg_acc = reg_o >> 256; o2_X = reg_o; Enable sign a, b; operation : b +/- a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_positive; operation : -s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : -s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; Enable sign a,b; operation : -s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = 0; reg_b = 0; reg_acc = 0; operation : b +/- a + acc;
-- In case of size 4, 5, 6, 7, 8
reg_a = a2_X; reg_b = b2_X; reg_acc = reg_o >> 256; o2_X = reg_o; operation : b +/- a + acc;
-- In case of size 4
reg_a = a3_X; reg_b = b3_X; reg_acc = reg_o >> 256; o3_X = reg_o; Enable sign a, b; operation : b +/- a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_positive; operation : -s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : -s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : -s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; Enable sign a,b; operation : -s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = 0; reg_b = 0; reg_acc = 0; operation : b +/- a + acc;
-- In case of size 5, 6, 7, 8
reg_a = a3_X; reg_b = b3_X; reg_acc = reg_o >> 256; o3_X = reg_o; operation : b +/- a + acc;
-- In case of size 5
reg_a = a4_X; reg_b = b4_X; reg_acc = reg_o >> 256; o4_X = reg_o; Enable sign a, b; operation : b +/- a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_positive; operation : -s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : -s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : -s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; operation : -s*b + a + acc;
reg_a = o4_X; reg_b = 2prime4; reg_acc = reg_o >> 256; o4_X = reg_o; Enable sign a,b; operation : -s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; operation : s*b + a + acc;
reg_a = o4_X; reg_b = 2prime4; reg_acc = reg_o >> 256; o4_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; operation : s*b + a + acc;
reg_a = o4_X; reg_b = 2prime4; reg_acc = reg_o >> 256; o4_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = 0; reg_b = 0; reg_acc = 0; operation : b +/- a + acc;
-- In case of size 6, 7, 8
reg_a = a4_X; reg_b = b4_X; reg_acc = reg_o >> 256; o4_X = reg_o; operation : b +/- a + acc;
-- In case of size 6
reg_a = a5_X; reg_b = b5_X; reg_acc = reg_o >> 256; o5_X = reg_o; Enable sign a, b; operation : b +/- a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_positive; operation : -s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : -s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : -s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; operation : -s*b + a + acc;
reg_a = o4_X; reg_b = 2prime4; reg_acc = reg_o >> 256; o4_X = reg_o; operation : -s*b + a + acc;
reg_a = o5_X; reg_b = 2prime5; reg_acc = reg_o >> 256; o5_X = reg_o; Enable sign a,b; operation : -s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; operation : s*b + a + acc;
reg_a = o4_X; reg_b = 2prime4; reg_acc = reg_o >> 256; o4_X = reg_o; operation : s*b + a + acc;
reg_a = o5_X; reg_b = 2prime5; reg_acc = reg_o >> 256; o5_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; operation : s*b + a + acc;
reg_a = o4_X; reg_b = 2prime4; reg_acc = reg_o >> 256; o4_X = reg_o; operation : s*b + a + acc;
reg_a = o5_X; reg_b = 2prime5; reg_acc = reg_o >> 256; o5_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = 0; reg_b = 0; reg_acc = 0; operation : b +/- a + acc;
-- In case of size 7, 8
reg_a = a5_X; reg_b = b5_X; reg_acc = reg_o >> 256; o5_X = reg_o; operation : b +/- a + acc;
-- In case of size 7
reg_a = a6_X; reg_b = b6_X; reg_acc = reg_o >> 256; o6_X = reg_o; Enable sign a, b; operation : b +/- a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_positive; operation : -s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : -s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : -s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; operation : -s*b + a + acc;
reg_a = o4_X; reg_b = 2prime4; reg_acc = reg_o >> 256; o4_X = reg_o; operation : -s*b + a + acc;
reg_a = o5_X; reg_b = 2prime5; reg_acc = reg_o >> 256; o5_X = reg_o; operation : -s*b + a + acc;
reg_a = o6_X; reg_b = 2prime6; reg_acc = reg_o >> 256; o6_X = reg_o; Enable sign a,b; operation : -s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; operation : s*b + a + acc;
reg_a = o4_X; reg_b = 2prime4; reg_acc = reg_o >> 256; o4_X = reg_o; operation : s*b + a + acc;
reg_a = o5_X; reg_b = 2prime5; reg_acc = reg_o >> 256; o5_X = reg_o; operation : s*b + a + acc;
reg_a = o6_X; reg_b = 2prime6; reg_acc = reg_o >> 256; o6_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; operation : s*b + a + acc;
reg_a = o4_X; reg_b = 2prime4; reg_acc = reg_o >> 256; o4_X = reg_o; operation : s*b + a + acc;
reg_a = o5_X; reg_b = 2prime5; reg_acc = reg_o >> 256; o5_X = reg_o; operation : s*b + a + acc;
reg_a = o6_X; reg_b = 2prime6; reg_acc = reg_o >> 256; o6_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = 0; reg_b = 0; reg_acc = 0; operation : b +/- a + acc;
-- In case of size 8
reg_a = a6_X; reg_b = b6_X; reg_acc = reg_o >> 256; o6_X = reg_o; operation : b +/- a + acc;
reg_a = a7_X; reg_b = b7_X; reg_acc = reg_o >> 256; o7_X = reg_o; Enable sign a, b; operation : b +/- a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_positive; operation : -s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : -s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : -s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; operation : -s*b + a + acc;
reg_a = o4_X; reg_b = 2prime4; reg_acc = reg_o >> 256; o4_X = reg_o; operation : -s*b + a + acc;
reg_a = o5_X; reg_b = 2prime5; reg_acc = reg_o >> 256; o5_X = reg_o; operation : -s*b + a + acc;
reg_a = o6_X; reg_b = 2prime6; reg_acc = reg_o >> 256; o6_X = reg_o; operation : -s*b + a + acc;
reg_a = o7_X; reg_b = 2prime7; reg_acc = reg_o >> 256; o7_X = reg_o; Enable sign a,b; operation : -s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; operation : s*b + a + acc;
reg_a = o4_X; reg_b = 2prime4; reg_acc = reg_o >> 256; o4_X = reg_o; operation : s*b + a + acc;
reg_a = o5_X; reg_b = 2prime5; reg_acc = reg_o >> 256; o5_X = reg_o; operation : s*b + a + acc;
reg_a = o6_X; reg_b = 2prime6; reg_acc = reg_o >> 256; o6_X = reg_o; operation : s*b + a + acc;
reg_a = o7_X; reg_b = 2prime7; reg_acc = reg_o >> 256; o7_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = o0_X; reg_b = 2prime0; reg_acc = 0; o0_X = reg_o; reg_s = reg_o_negative; operation : s*b + a + acc;
reg_a = o1_X; reg_b = 2prime1; reg_acc = reg_o >> 256; o1_X = reg_o; operation : s*b + a + acc;
reg_a = o2_X; reg_b = 2prime2; reg_acc = reg_o >> 256; o2_X = reg_o; operation : s*b + a + acc;
reg_a = o3_X; reg_b = 2prime3; reg_acc = reg_o >> 256; o3_X = reg_o; operation : s*b + a + acc;
reg_a = o4_X; reg_b = 2prime4; reg_acc = reg_o >> 256; o4_X = reg_o; operation : s*b + a + acc;
reg_a = o5_X; reg_b = 2prime5; reg_acc = reg_o >> 256; o5_X = reg_o; operation : s*b + a + acc;
reg_a = o6_X; reg_b = 2prime6; reg_acc = reg_o >> 256; o6_X = reg_o; operation : s*b + a + acc;
reg_a = o7_X; reg_b = 2prime7; reg_acc = reg_o >> 256; o7_X = reg_o; Enable sign a,b; operation : s*b + a + acc;
reg_a = 0; reg_b = 0; reg_acc = 0; operation : b +/- a + acc;